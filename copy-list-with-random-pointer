/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
         Node*p=head;
         Node*q=NULL;
        while(p!=NULL)
        {
            q=p->next;
            p->next=new Node(p->val);
            p->next->next=q;
            p=p->next->next;
        }
        p=head;
        while(p!=NULL)
        {
            if(p->random==NULL)
            {
                p->next->random=NULL;
                p=p->next->next;
            }
            else{
                 p->next->random=p->random->next;
                 p=p->next->next;
            }   
        }
        if(head==NULL)
        {
            return NULL;
        }
        
        Node*head2=head->next;
        p=head;
        q=head2;
        while(q->next!=NULL)
        {
            p->next=q->next;
            p=p->next;
            q->next=p->next;
            q=q->next;
        }
        
        p->next=NULL;
        return head2;
    }
};
