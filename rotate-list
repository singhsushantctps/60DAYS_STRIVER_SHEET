/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        int size=0;
        ListNode*p=head;
        ListNode*q;
        ListNode*r;
        if(head==NULL)
        {
            return NULL;
        }
        if(head->next==NULL)
        {
            return head;
        }
        if(k==0)
        {
            return head;
        }
        
        while(p!=NULL)
        {
            size++;
            p=p->next;
        }
        p=head;
        int d=size-k;
        if(d==0)
        {
            return head;
        }
        while(d<0)
        {
            d=size+d;
        }
         if(d==0)
        {
            return head;
        }
        for(int i=0;i<d;i++)
        {
            q=p;
            p=p->next;
        }
        q->next=NULL;
        r=p;
        while(r->next!=NULL)
        {
            r=r->next;
        }
        r->next=head;
        head=p;
        return head;
        
    }
};
